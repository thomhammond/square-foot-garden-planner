plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    // JUnit
    implementation 'org.junit.jupiter:junit-jupiter:5.8.2'
    implementation 'org.slf4j:slf4j-log4j12:1.7.36'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    // Add Guava if needed...
    // implementation 'com.google.guava:guava:30.1.1-jre'

    // Mockito
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '3.10.0'

    // GSON
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.7'

    // Dagger
    implementation 'com.google.dagger:dagger:2.40.5'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.40.5'

    // AWS
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.1000')
    implementation 'com.amazonaws:aws-java-sdk-s3'
    implementation 'com.amazonaws:aws-lambda-java-core:1.2.1'
    implementation 'com.amazonaws:aws-lambda-java-events:3.11.0'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.154'

    // LOG4J - Consider other logging options
    implementation 'org.apache.logging.log4j:log4j-api:2.17.0'
    implementation 'org.apache.logging.log4j:log4j-core:2.17.0'
    runtimeOnly 'org.apache.logging.log4j:log4j-slf4j18-impl:2.17.0'
    runtimeOnly 'com.amazonaws:aws-lambda-java-log4j2:1.5.1'

    // Apache Commons
    implementation 'org.apache.commons:commons-lang3:3.12.0'
}

test {
    useJUnitPlatform()
}

// Do I need all of this?
project.configurations.implementation.setCanBeResolved(true)
jar {
    manifest {
        attributes(
                "Main-Class": "",
                "Class-Path": configurations.implementation.collect { it.name }.join(' ')
        )
    }
    dependsOn('dependencies')
}

task buildZip(type: Zip) {
    from compileJava
    from processResources
    into('./lib') {
        from configurations.runtimeClasspath
    }
}